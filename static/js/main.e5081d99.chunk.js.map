{"version":3,"sources":["redux-toolkit.ts","components/Alert.tsx","types.ts","components/functionHelper.ts","pages/DetailForecast.tsx","hooks/detailed.hook.ts","components/Header.tsx","hooks/locallStorige.hook.ts","hooks/addCity.hook.ts","components/form/Form.tsx","components/ListItems.tsx","pages/ShortForecast.tsx","App.tsx","routes.tsx","reportWebVitals.ts","index.tsx"],"names":["shortSlice","createSlice","name","initialState","reducers","create","reducer","state","payload","push","prepare","city","date","h","Date","getHours","m","getMinutes","s","getSeconds","ss","getMilliseconds","remove","filter","el","id","update","index","findIndex","ind","splice","oneCallSlice","alertCallSlice","massage","severity","severityRu","visible","showAlert","hidenAlert","localCallSlice","addCityName","removeCityName","cityName","actions","addCityNameAction","addCityAction","removeCityAction","updateCityAction","createDetailedAction","showAlertAction","hidenAlertAction","shortForecast","oneCall","middleware","getDefaultMiddleware","logger","configureStore","Alert","dispath","useDispatch","useSelector","nodeRef","useRef","React","timer","setTimeout","undefined","clearTimeout","CSSTransition","in","timeout","enter","exit","unmountOnExit","mountOnEnter","classNames","variant","ref","className","AlertTitle","LOCALSTORAGE_DATA_NAME","giveColor","n","rez","Math","abs","theme","createTheme","useStyles","makeStyles","root","color","palette","primary","main","test","backgroundColor","card","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","minHeight","marginBottom","cardContentMain","cardDaily","breakpoints","down","justifyContent","gap","width","c","marginRight","itemsDealy","height","boxSizing","display","flexDirection","textCapitalize","textTransform","typographyH2","Item","styled","Paper","textAlign","AvatarMain","Avatar","DetailForecast","slug","useParams","classes","dataOneCalls","dispatch","createDetailed","useCallback","lat","lon","a","superagent","get","response","ok","JSON","parse","text","data","console","log","body","useDetailed","ItemsDealy","currentID","hourly","e","i","slice","map","t","ceil","temp","g","styleTest","padding","paperTempHour","background","dealyAvatar","weather","item","icon","Grid","Box","component","Typography","moment","unix","dt","locale","format","hours","minutes","Stack","direction","spacing","alt","src","style","WeatherToDay","currentTemp","current","feelsLike","feels_like","curentAvater","Card","CardContent","container","alignItems","xs","flexGrow","description","wind_speed","sunrise","sunset","useEffect","coord","window","location","href","match","ThemeProvider","Container","maxWidth","Button","alignSelf","daily","month","morn","day","eve","moonrise","moonset","Header","children","gutterBottom","align","useLocalStorage","key","initialValue","useState","localStorage","getItem","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useAddCitys","Array","setValue","KEY","addNewCity","superagentTest","prev","url","req","resErrorName","message","cod","length","find","removeCityLocal","updateCity","FormField","setValues","formStyle","initialValues","validate","onSubmit","resetForm","props","TextField","placeholder","field","endIcon","type","size","disabled","meta","useStyle","avatar","ListItems","citysItems","List","sx","minWidth","bgcolor","TransitionGroup","desc","temp_max","temp_min","ListItem","secondaryAction","IconButton","edge","onClick","disablePadding","ListItemButton","role","dense","NavLink","to","ListItemIcon","ListItemText","secondary","ShortForecast","App","stateLocalStorage","forEach","router","path","exact","render","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e5081d99.chunk.js","sourcesContent":["import {\r\n  configureStore, createSlice, getDefaultMiddleware, PayloadAction,\r\n} from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger';\r\nimport { CitysWeather, OneCall } from './types'\r\n\r\nexport type CitysWeatherState = {\r\n  city: CitysWeather\r\n}\r\n\r\nconst cityWeatherInit:CitysWeatherState[] = []\r\nconst oneCallInit: OneCall[] = []\r\nconst alert: {\r\n  massage?: string,\r\n  severity: 'error' | 'success' | 'info' | 'warning' | undefined,\r\n  severityRu: 'Ошибка' | 'Успех' | 'Информация' | 'Внимание' | undefined,\r\n  visible?: boolean\r\n} = {\r\n  massage: 'Test State massage',\r\n  severity: 'success',\r\n  severityRu: 'Успех',\r\n  visible: false\r\n}\r\nconst localstorage: unknown[] = []\r\nexport type Alert = typeof alert\r\n\r\nconst shortSlice = createSlice({\r\n  name: 'shortForecast',\r\n  initialState: cityWeatherInit,\r\n  reducers: {\r\n    create: {\r\n      reducer: (state, { payload }: PayloadAction<CitysWeatherState>) => {\r\n        state.push(payload)\r\n      },\r\n      prepare: ({ city } : {city: CitysWeather}) => ({\r\n        payload: {\r\n          city,\r\n          get date() {\r\n            return {\r\n              h: new Date().getHours(),\r\n              m: new Date().getMinutes(),\r\n              s: new Date().getSeconds(),\r\n              ss: new Date().getMilliseconds()\r\n            }\r\n          }\r\n        }\r\n\r\n      })\r\n    },\r\n    remove: (state, { payload }: PayloadAction<{id: number}>) => {\r\n      const item = state.filter((el) => el.city.id !== payload.id)\r\n      return item\r\n    },\r\n    update: {\r\n      reducer: (state, { payload }: PayloadAction<CitysWeatherState>) => {\r\n        const index = state.findIndex((ind) => ind.city.id === payload.city.id)\r\n        state.splice(index, 1, payload)\r\n      },\r\n      prepare: ({ city } : {city: CitysWeather}) => ({\r\n        payload: {\r\n          city,\r\n          get date() {\r\n            return {\r\n              h: new Date().getHours(),\r\n              m: new Date().getMinutes(),\r\n              s: new Date().getSeconds(),\r\n              ss: new Date().getMilliseconds()\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n  }\r\n})\r\nconst oneCallSlice = createSlice({\r\n  name: 'oneCall',\r\n  initialState: oneCallInit,\r\n  reducers: {\r\n    update: ((state, { payload }: PayloadAction<OneCall>) => {\r\n      state.splice(0, 1, payload)\r\n    })\r\n  }\r\n})\r\nconst alertCallSlice = createSlice({\r\n  name: 'alert',\r\n  initialState: alert,\r\n  reducers: {\r\n    showAlert: (\r\n      (state, { payload }: PayloadAction<Alert>) => (\r\n        { ...payload, visible: true }\r\n      )),\r\n    hidenAlert: (\r\n      (state, { payload }: PayloadAction<Alert>) => (\r\n        { ...state, visible: false }\r\n      ))\r\n  }\r\n})\r\nconst localCallSlice = createSlice({\r\n  name: 'localStorage',\r\n  initialState: localstorage,\r\n  reducers: {\r\n    addCityName: (\r\n      (state, { payload }: PayloadAction<unknown>) => {\r\n        state.push(payload)\r\n      }),\r\n    removeCityName: ((state, { payload }: PayloadAction<{city: string}>) => {\r\n      const item = state.filter((cityName) => cityName !== payload.city)\r\n      return item\r\n    })\r\n  }\r\n})\r\n\r\nexport const {\r\n  addCityName: addCityNameAction,\r\n  removeCityName: removeCityLocalAction\r\n} = localCallSlice.actions\r\n\r\nexport const {\r\n  create: addCityAction,\r\n  remove: removeCityAction,\r\n  update: updateCityAction\r\n} = shortSlice.actions\r\n\r\nexport const {\r\n  update: createDetailedAction,\r\n} = oneCallSlice.actions\r\n\r\nexport const {\r\n  showAlert: showAlertAction,\r\n  hidenAlert: hidenAlertAction,\r\n} = alertCallSlice.actions\r\n\r\nconst reducer = {\r\n  shortForecast: shortSlice.reducer,\r\n  oneCall: oneCallSlice.reducer,\r\n  alertCallSlice: alertCallSlice.reducer,\r\n  localCallSlice: localCallSlice.reducer\r\n}\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\nexport default configureStore({\r\n  reducer,\r\n  middleware\r\n})\r\n","import * as React from 'react'\r\nimport MuiAlert from '@mui/material/Alert'\r\nimport { AlertTitle } from '@material-ui/core'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { hidenAlertAction } from '../redux-toolkit'\r\n\r\n// eslint-disable-next-line max-len\r\nexport const Alert = (): any => {\r\n  const dispath = useDispatch()\r\n  const alertCallSlice = useSelector((state: any) => state.alertCallSlice)\r\n  const nodeRef = useRef(null)\r\n  // eslint-disable-next-line consistent-return\r\n  React.useEffect(() => {\r\n    if (alertCallSlice.visible) {\r\n      const timer = setTimeout(() => {\r\n        dispath(hidenAlertAction({\r\n          massage: undefined,\r\n          severity: 'success',\r\n          severityRu: 'Успех',\r\n        }))\r\n      }, 2000)\r\n      return () => clearTimeout(timer)\r\n    }\r\n  }, [alertCallSlice.visible, dispath])\r\n  return (\r\n    <CSSTransition\r\n      in={alertCallSlice.visible}\r\n      timeout={{\r\n        enter: 500,\r\n        exit: 350\r\n      }}\r\n      unmountOnExit\r\n      mountOnEnter\r\n      classNames=\"alert\"\r\n      nodeRef={nodeRef}\r\n    >\r\n      <MuiAlert\r\n        severity={alertCallSlice.severity}\r\n        variant=\"filled\"\r\n        ref={nodeRef}\r\n        className=\"alert\"\r\n      >\r\n        <AlertTitle>{alertCallSlice.severityRu}</AlertTitle>\r\n        {alertCallSlice.massage}\r\n      </MuiAlert>\r\n    </CSSTransition>\r\n  )\r\n}\r\n","const citys = {\r\n  coord: {\r\n    lon: -122.08,\r\n    lat: 37.39,\r\n  },\r\n  weather: [\r\n    {\r\n      id: 800,\r\n      main: 'Clear',\r\n      description: 'clear sky',\r\n      icon: '01d',\r\n    },\r\n  ],\r\n  base: 'stations',\r\n  main: {\r\n    temp: 282.55,\r\n    feels_like: 281.86,\r\n    temp_min: 280.37,\r\n    temp_max: 284.26,\r\n    pressure: 1023,\r\n    humidity: 100,\r\n  },\r\n  visibility: 16093,\r\n  wind: {\r\n    speed: 1.5,\r\n    deg: 350,\r\n  },\r\n  clouds: {\r\n    all: 1,\r\n  },\r\n  dt: 1560350645,\r\n  sys: {\r\n    type: 1,\r\n    id: 5122,\r\n    message: 0.0139,\r\n    country: 'US',\r\n    sunrise: 1560343627,\r\n    sunset: 1560396563,\r\n  },\r\n  timezone: -25200,\r\n  id: 420006353,\r\n  name: 'Mountain View',\r\n  cod: 200,\r\n}\r\n\r\nexport type CitysWeather = typeof citys\r\n\r\nconst daily = [\r\n  {\r\n    dt: 1632560400,\r\n    sunrise: 1632540345,\r\n    sunset: 1632583656,\r\n    moonrise: 1632590280,\r\n    moonset: 1632556920,\r\n    moon_phase: 0.64,\r\n    temp: {\r\n      day: 10.99,\r\n      min: 8.76,\r\n      max: 13.53,\r\n      night: 11.76,\r\n      eve: 13.1,\r\n      morn: 9.31\r\n    },\r\n    feels_like: {\r\n      day: 10.29,\r\n      night: 11.11,\r\n      eve: 12.16,\r\n      morn: 8.7\r\n    },\r\n    pressure: 1008,\r\n    humidity: 82,\r\n    dew_point: 8.04,\r\n    wind_speed: 5.26,\r\n    wind_deg: 290,\r\n    wind_gust: 9.71,\r\n    weather: [\r\n      {\r\n        id: 803,\r\n        main: 'Clouds',\r\n        description: 'облачно с прояснениями',\r\n        icon: '04d'\r\n      }\r\n    ],\r\n    clouds: 75,\r\n    pop: 0.36,\r\n    uvi: 2.3\r\n  },\r\n  {\r\n    dt: 1632646800,\r\n    sunrise: 1632626835,\r\n    sunset: 1632669923,\r\n    moonrise: 1632678180,\r\n    moonset: 1632647400,\r\n    moon_phase: 0.67,\r\n    temp: {\r\n      day: 13.27,\r\n      min: 10.02,\r\n      max: 15.23,\r\n      night: 10.02,\r\n      eve: 11.91,\r\n      morn: 12.49\r\n    },\r\n    feels_like: {\r\n      day: 12.48,\r\n      night: 9.04,\r\n      eve: 10.83,\r\n      morn: 12.12\r\n    },\r\n    pressure: 1013,\r\n    humidity: 70,\r\n    dew_point: 7.96,\r\n    wind_speed: 7.07,\r\n    wind_deg: 314,\r\n    wind_gust: 12.6,\r\n    weather: [\r\n      {\r\n        id: 500,\r\n        main: 'Rain',\r\n        description: 'небольшой дождь',\r\n        icon: '10d'\r\n      }\r\n    ],\r\n    clouds: 49,\r\n    pop: 0.32,\r\n    rain: 0.45,\r\n    uvi: 1.67\r\n  },\r\n  {\r\n    dt: 1632733200,\r\n    sunrise: 1632713325,\r\n    sunset: 1632756190,\r\n    moonrise: 1632766500,\r\n    moonset: 1632737820,\r\n    moon_phase: 0.7,\r\n    temp: {\r\n      day: 11.85,\r\n      min: 7.12,\r\n      max: 14.33,\r\n      night: 9.77,\r\n      eve: 12.83,\r\n      morn: 7.12\r\n    },\r\n    feels_like: {\r\n      day: 10.81,\r\n      night: 8.16,\r\n      eve: 11.87,\r\n      morn: 4.31\r\n    },\r\n    pressure: 1019,\r\n    humidity: 66,\r\n    dew_point: 5.85,\r\n    wind_speed: 5.06,\r\n    wind_deg: 8,\r\n    wind_gust: 10.53,\r\n    weather: [\r\n      {\r\n        id: 500,\r\n        main: 'Rain',\r\n        description: 'небольшой дождь',\r\n        icon: '10d'\r\n      }\r\n    ],\r\n    clouds: 100,\r\n    pop: 0.36,\r\n    rain: 0.13,\r\n    uvi: 2.21\r\n  },\r\n  {\r\n    dt: 1632819600,\r\n    sunrise: 1632799816,\r\n    sunset: 1632842458,\r\n    moonrise: 1632855300,\r\n    moonset: 1632827880,\r\n    moon_phase: 0.73,\r\n    temp: {\r\n      day: 12.42,\r\n      min: 8.32,\r\n      max: 13.36,\r\n      night: 10.61,\r\n      eve: 11.55,\r\n      morn: 8.38\r\n    },\r\n    feels_like: {\r\n      day: 11.31,\r\n      night: 9.58,\r\n      eve: 10.51,\r\n      morn: 6.98\r\n    },\r\n    pressure: 1026,\r\n    humidity: 61,\r\n    dew_point: 5.24,\r\n    wind_speed: 4.12,\r\n    wind_deg: 42,\r\n    wind_gust: 7.3,\r\n    weather: [\r\n      {\r\n        id: 500,\r\n        main: 'Rain',\r\n        description: 'небольшой дождь',\r\n        icon: '10d'\r\n      }\r\n    ],\r\n    clouds: 100,\r\n    pop: 0.2,\r\n    rain: 0.31,\r\n    uvi: 1.17\r\n  },\r\n  {\r\n    dt: 1632906000,\r\n    sunrise: 1632886306,\r\n    sunset: 1632928726,\r\n    moonrise: 1632944760,\r\n    moonset: 1632917580,\r\n    moon_phase: 0.75,\r\n    temp: {\r\n      day: 10.66,\r\n      min: 6.53,\r\n      max: 12.85,\r\n      night: 9.22,\r\n      eve: 11.86,\r\n      morn: 6.53\r\n    },\r\n    feels_like: {\r\n      day: 9.48,\r\n      night: 7.81,\r\n      eve: 10.35,\r\n      morn: 4.29\r\n    },\r\n    pressure: 1032,\r\n    humidity: 65,\r\n    dew_point: 4.45,\r\n    wind_speed: 4.08,\r\n    wind_deg: 63,\r\n    wind_gust: 7.03,\r\n    weather: [\r\n      {\r\n        id: 500,\r\n        main: 'Rain',\r\n        description: 'небольшой дождь',\r\n        icon: '10d'\r\n      }\r\n    ],\r\n    clouds: 98,\r\n    pop: 0.2,\r\n    rain: 0.13,\r\n    uvi: 2.61\r\n  },\r\n  {\r\n    dt: 1632992400,\r\n    sunrise: 1632972797,\r\n    sunset: 1633014994,\r\n    moonrise: 1633034880,\r\n    moonset: 1633006680,\r\n    moon_phase: 0.79,\r\n    temp: {\r\n      day: 12.39,\r\n      min: 5.74,\r\n      max: 14.22,\r\n      night: 10.01,\r\n      eve: 12.58,\r\n      morn: 5.74\r\n    },\r\n    feels_like: {\r\n      day: 10.57,\r\n      night: 8.16,\r\n      eve: 10.81,\r\n      morn: 3.66\r\n    },\r\n    pressure: 1034,\r\n    humidity: 34,\r\n    dew_point: -2.76,\r\n    wind_speed: 3.92,\r\n    wind_deg: 92,\r\n    wind_gust: 8.12,\r\n    weather: [\r\n      {\r\n        id: 801,\r\n        main: 'Clouds',\r\n        description: 'небольшая облачность',\r\n        icon: '02d'\r\n      }\r\n    ],\r\n    clouds: 14,\r\n    pop: 0,\r\n    uvi: 3\r\n  },\r\n  {\r\n    dt: 1633078800,\r\n    sunrise: 1633059288,\r\n    sunset: 1633101262,\r\n    moonrise: 0,\r\n    moonset: 1633095300,\r\n    moon_phase: 0.82,\r\n    temp: {\r\n      day: 13.27,\r\n      min: 6.39,\r\n      max: 14.94,\r\n      night: 10.63,\r\n      eve: 12.9,\r\n      morn: 6.39\r\n    },\r\n    feels_like: {\r\n      day: 11.44,\r\n      night: 8.69,\r\n      eve: 11.03,\r\n      morn: 4.39\r\n    },\r\n    pressure: 1029,\r\n    humidity: 30,\r\n    dew_point: -3.96,\r\n    wind_speed: 4.24,\r\n    wind_deg: 101,\r\n    wind_gust: 7.3,\r\n    weather: [\r\n      {\r\n        id: 802,\r\n        main: 'Clouds',\r\n        description: 'переменная облачность',\r\n        icon: '03d'\r\n      }\r\n    ],\r\n    clouds: 32,\r\n    pop: 0,\r\n    uvi: 3\r\n  },\r\n  {\r\n    dt: 1633165200,\r\n    sunrise: 1633145780,\r\n    sunset: 1633187531,\r\n    moonrise: 1633125420,\r\n    moonset: 1633183440,\r\n    moon_phase: 0.85,\r\n    temp: {\r\n      day: 13.52,\r\n      min: 7.32,\r\n      max: 15.25,\r\n      night: 11.38,\r\n      eve: 13.31,\r\n      morn: 7.32\r\n    },\r\n    feels_like: {\r\n      day: 11.84,\r\n      night: 9.59,\r\n      eve: 11.58,\r\n      morn: 6.6\r\n    },\r\n    pressure: 1025,\r\n    humidity: 35,\r\n    dew_point: -1.56,\r\n    wind_speed: 2.28,\r\n    wind_deg: 78,\r\n    wind_gust: 5,\r\n    weather: [\r\n      {\r\n        id: 800,\r\n        main: 'Clear',\r\n        description: 'ясно',\r\n        icon: '01d'\r\n      }\r\n    ],\r\n    clouds: 6,\r\n    pop: 0,\r\n    uvi: 3\r\n  }\r\n]\r\n\r\nexport type Daily = typeof daily\r\n\r\nconst oneCall = {\r\n  lat: 50,\r\n  lon: 36.25,\r\n  timezone: 'Europe/Kiev',\r\n  timezone_offset: 10800,\r\n  current: {\r\n    dt: 1632559668,\r\n    sunrise: 1632540345,\r\n    sunset: 1632583656,\r\n    temp: 10.99,\r\n    feels_like: 10.29,\r\n    pressure: 1008,\r\n    humidity: 82,\r\n    dew_point: 8.04,\r\n    uvi: 1.8,\r\n    clouds: 75,\r\n    visibility: 10000,\r\n    wind_speed: 3,\r\n    wind_deg: 250,\r\n    weather: [\r\n      {\r\n        id: 803,\r\n        main: 'Clouds',\r\n        description: 'облачно с прояснениями',\r\n        icon: '04d'\r\n      }\r\n    ]\r\n  },\r\n  minutely: [\r\n    {\r\n      dt: 1632559680,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632559740,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632559800,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632559860,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632559920,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632559980,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560040,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560100,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560160,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560220,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560280,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560340,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560400,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560460,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560520,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560580,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560640,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560700,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560760,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560820,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560880,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632560940,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561000,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561060,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561120,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561180,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561240,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561300,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561360,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561420,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561480,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561540,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561600,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561660,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561720,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561780,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561840,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561900,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632561960,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562020,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562080,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562140,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562200,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562260,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562320,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562380,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562440,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562500,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562560,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562620,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562680,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562740,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562800,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562860,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562920,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632562980,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632563040,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632563100,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632563160,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632563220,\r\n      precipitation: 0\r\n    },\r\n    {\r\n      dt: 1632563280,\r\n      precipitation: 0\r\n    }\r\n  ],\r\n  hourly: [\r\n    {\r\n      dt: 1632556800,\r\n      temp: 10.94,\r\n      feels_like: 10.26,\r\n      pressure: 1008,\r\n      humidity: 83,\r\n      dew_point: 8.17,\r\n      uvi: 1.47,\r\n      clouds: 80,\r\n      visibility: 10000,\r\n      wind_speed: 1.97,\r\n      wind_deg: 225,\r\n      wind_gust: 2.6,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0.04\r\n    },\r\n    {\r\n      dt: 1632560400,\r\n      temp: 10.99,\r\n      feels_like: 10.29,\r\n      pressure: 1008,\r\n      humidity: 82,\r\n      dew_point: 8.04,\r\n      uvi: 1.8,\r\n      clouds: 75,\r\n      visibility: 10000,\r\n      wind_speed: 4.01,\r\n      wind_deg: 270,\r\n      wind_gust: 5.31,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0.24\r\n    },\r\n    {\r\n      dt: 1632564000,\r\n      temp: 11.52,\r\n      feels_like: 10.76,\r\n      pressure: 1008,\r\n      humidity: 78,\r\n      dew_point: 7.82,\r\n      uvi: 2.3,\r\n      clouds: 76,\r\n      visibility: 10000,\r\n      wind_speed: 4.57,\r\n      wind_deg: 281,\r\n      wind_gust: 5.7,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0.08\r\n    },\r\n    {\r\n      dt: 1632567600,\r\n      temp: 12.39,\r\n      feels_like: 11.51,\r\n      pressure: 1009,\r\n      humidity: 70,\r\n      dew_point: 7.08,\r\n      uvi: 1.95,\r\n      clouds: 78,\r\n      visibility: 10000,\r\n      wind_speed: 4.58,\r\n      wind_deg: 277,\r\n      wind_gust: 6.02,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632571200,\r\n      temp: 13,\r\n      feels_like: 12,\r\n      pressure: 1010,\r\n      humidity: 63,\r\n      dew_point: 6.13,\r\n      uvi: 1.36,\r\n      clouds: 82,\r\n      visibility: 10000,\r\n      wind_speed: 5.06,\r\n      wind_deg: 283,\r\n      wind_gust: 6.1,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632574800,\r\n      temp: 13.53,\r\n      feels_like: 12.4,\r\n      pressure: 1010,\r\n      humidity: 56,\r\n      dew_point: 4.93,\r\n      uvi: 0.56,\r\n      clouds: 95,\r\n      visibility: 10000,\r\n      wind_speed: 5.26,\r\n      wind_deg: 290,\r\n      wind_gust: 7.41,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632578400,\r\n      temp: 13.45,\r\n      feels_like: 12.42,\r\n      pressure: 1012,\r\n      humidity: 60,\r\n      dew_point: 5.86,\r\n      uvi: 0.21,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 3.94,\r\n      wind_deg: 283,\r\n      wind_gust: 6.4,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632582000,\r\n      temp: 13.1,\r\n      feels_like: 12.16,\r\n      pressure: 1012,\r\n      humidity: 65,\r\n      dew_point: 6.62,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 3.54,\r\n      wind_deg: 279,\r\n      wind_gust: 7.54,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632585600,\r\n      temp: 12.67,\r\n      feels_like: 11.85,\r\n      pressure: 1013,\r\n      humidity: 71,\r\n      dew_point: 7.54,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 3.34,\r\n      wind_deg: 267,\r\n      wind_gust: 7.62,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632589200,\r\n      temp: 12.26,\r\n      feels_like: 11.5,\r\n      pressure: 1013,\r\n      humidity: 75,\r\n      dew_point: 7.91,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 3.25,\r\n      wind_deg: 262,\r\n      wind_gust: 8.02,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632592800,\r\n      temp: 11.99,\r\n      feels_like: 11.18,\r\n      pressure: 1013,\r\n      humidity: 74,\r\n      dew_point: 7.54,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 3.76,\r\n      wind_deg: 251,\r\n      wind_gust: 8.62,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632596400,\r\n      temp: 12,\r\n      feels_like: 11.27,\r\n      pressure: 1013,\r\n      humidity: 77,\r\n      dew_point: 8.04,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 4.25,\r\n      wind_deg: 256,\r\n      wind_gust: 9.2,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632600000,\r\n      temp: 11.76,\r\n      feels_like: 11.11,\r\n      pressure: 1013,\r\n      humidity: 81,\r\n      dew_point: 8.55,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 4.27,\r\n      wind_deg: 249,\r\n      wind_gust: 9.71,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0.2\r\n    },\r\n    {\r\n      dt: 1632603600,\r\n      temp: 11.75,\r\n      feels_like: 11.04,\r\n      pressure: 1012,\r\n      humidity: 79,\r\n      dew_point: 8.15,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 4.92,\r\n      wind_deg: 247,\r\n      wind_gust: 10.3,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0.24\r\n    },\r\n    {\r\n      dt: 1632607200,\r\n      temp: 11.47,\r\n      feels_like: 10.74,\r\n      pressure: 1012,\r\n      humidity: 79,\r\n      dew_point: 8.02,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 4.37,\r\n      wind_deg: 238,\r\n      wind_gust: 11.12,\r\n      weather: [\r\n        {\r\n          id: 500,\r\n          main: 'Rain',\r\n          description: 'небольшой дождь',\r\n          icon: '10n'\r\n        }\r\n      ],\r\n      pop: 0.24,\r\n      rain: {\r\n        '1h': 0.19\r\n      }\r\n    },\r\n    {\r\n      dt: 1632610800,\r\n      temp: 11.85,\r\n      feels_like: 11.07,\r\n      pressure: 1012,\r\n      humidity: 76,\r\n      dew_point: 7.76,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 5.15,\r\n      wind_deg: 247,\r\n      wind_gust: 11.54,\r\n      weather: [\r\n        {\r\n          id: 500,\r\n          main: 'Rain',\r\n          description: 'небольшой дождь',\r\n          icon: '10n'\r\n        }\r\n      ],\r\n      pop: 0.32,\r\n      rain: {\r\n        '1h': 0.13\r\n      }\r\n    },\r\n    {\r\n      dt: 1632614400,\r\n      temp: 12.03,\r\n      feels_like: 11.25,\r\n      pressure: 1011,\r\n      humidity: 75,\r\n      dew_point: 7.84,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 5.23,\r\n      wind_deg: 247,\r\n      wind_gust: 11.52,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0.28\r\n    },\r\n    {\r\n      dt: 1632618000,\r\n      temp: 12.18,\r\n      feels_like: 11.52,\r\n      pressure: 1011,\r\n      humidity: 79,\r\n      dew_point: 8.54,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 5.2,\r\n      wind_deg: 253,\r\n      wind_gust: 12.4,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632621600,\r\n      temp: 12.44,\r\n      feels_like: 11.93,\r\n      pressure: 1011,\r\n      humidity: 84,\r\n      dew_point: 9.76,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 5.49,\r\n      wind_deg: 261,\r\n      wind_gust: 12.6,\r\n      weather: [\r\n        {\r\n          id: 500,\r\n          main: 'Rain',\r\n          description: 'небольшой дождь',\r\n          icon: '10n'\r\n        }\r\n      ],\r\n      pop: 0.2,\r\n      rain: {\r\n        '1h': 0.13\r\n      }\r\n    },\r\n    {\r\n      dt: 1632625200,\r\n      temp: 12.49,\r\n      feels_like: 12.12,\r\n      pressure: 1011,\r\n      humidity: 89,\r\n      dew_point: 10.66,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 5.48,\r\n      wind_deg: 269,\r\n      wind_gust: 11.63,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0.08\r\n    },\r\n    {\r\n      dt: 1632628800,\r\n      temp: 12.64,\r\n      feels_like: 12.31,\r\n      pressure: 1011,\r\n      humidity: 90,\r\n      dew_point: 11.06,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 5.25,\r\n      wind_deg: 274,\r\n      wind_gust: 11.32,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632632400,\r\n      temp: 13.12,\r\n      feels_like: 12.73,\r\n      pressure: 1011,\r\n      humidity: 86,\r\n      dew_point: 10.96,\r\n      uvi: 0.2,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 5.54,\r\n      wind_deg: 282,\r\n      wind_gust: 10.94,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632636000,\r\n      temp: 14.38,\r\n      feels_like: 13.86,\r\n      pressure: 1011,\r\n      humidity: 76,\r\n      dew_point: 10.31,\r\n      uvi: 0.55,\r\n      clouds: 92,\r\n      visibility: 10000,\r\n      wind_speed: 5.96,\r\n      wind_deg: 293,\r\n      wind_gust: 10.12,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632639600,\r\n      temp: 15.23,\r\n      feels_like: 14.61,\r\n      pressure: 1012,\r\n      humidity: 69,\r\n      dew_point: 9.53,\r\n      uvi: 0.91,\r\n      clouds: 8,\r\n      visibility: 10000,\r\n      wind_speed: 6.52,\r\n      wind_deg: 305,\r\n      wind_gust: 9.6,\r\n      weather: [\r\n        {\r\n          id: 800,\r\n          main: 'Clear',\r\n          description: 'ясно',\r\n          icon: '01d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632643200,\r\n      temp: 14.85,\r\n      feels_like: 14.14,\r\n      pressure: 1012,\r\n      humidity: 67,\r\n      dew_point: 8.74,\r\n      uvi: 1.37,\r\n      clouds: 24,\r\n      visibility: 10000,\r\n      wind_speed: 7.07,\r\n      wind_deg: 314,\r\n      wind_gust: 9.92,\r\n      weather: [\r\n        {\r\n          id: 801,\r\n          main: 'Clouds',\r\n          description: 'небольшая облачность',\r\n          icon: '02d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632646800,\r\n      temp: 13.27,\r\n      feels_like: 12.48,\r\n      pressure: 1013,\r\n      humidity: 70,\r\n      dew_point: 7.96,\r\n      uvi: 1.67,\r\n      clouds: 49,\r\n      visibility: 10000,\r\n      wind_speed: 6.2,\r\n      wind_deg: 307,\r\n      wind_gust: 10.11,\r\n      weather: [\r\n        {\r\n          id: 802,\r\n          main: 'Clouds',\r\n          description: 'переменная облачность',\r\n          icon: '03d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632650400,\r\n      temp: 13.21,\r\n      feels_like: 12.28,\r\n      pressure: 1013,\r\n      humidity: 65,\r\n      dew_point: 6.71,\r\n      uvi: 1,\r\n      clouds: 62,\r\n      visibility: 10000,\r\n      wind_speed: 6.53,\r\n      wind_deg: 303,\r\n      wind_gust: 10,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632654000,\r\n      temp: 12.9,\r\n      feels_like: 11.94,\r\n      pressure: 1014,\r\n      humidity: 65,\r\n      dew_point: 6.44,\r\n      uvi: 0.84,\r\n      clouds: 70,\r\n      visibility: 10000,\r\n      wind_speed: 6.15,\r\n      wind_deg: 303,\r\n      wind_gust: 10.5,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632657600,\r\n      temp: 12.84,\r\n      feels_like: 11.9,\r\n      pressure: 1014,\r\n      humidity: 66,\r\n      dew_point: 6.55,\r\n      uvi: 0.59,\r\n      clouds: 75,\r\n      visibility: 10000,\r\n      wind_speed: 6.1,\r\n      wind_deg: 303,\r\n      wind_gust: 10.82,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632661200,\r\n      temp: 12.52,\r\n      feels_like: 11.45,\r\n      pressure: 1014,\r\n      humidity: 62,\r\n      dew_point: 5.54,\r\n      uvi: 0.58,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 7.02,\r\n      wind_deg: 312,\r\n      wind_gust: 11.6,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632664800,\r\n      temp: 12.1,\r\n      feels_like: 11.01,\r\n      pressure: 1014,\r\n      humidity: 63,\r\n      dew_point: 5.24,\r\n      uvi: 0.22,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 6.01,\r\n      wind_deg: 316,\r\n      wind_gust: 11,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632668400,\r\n      temp: 11.91,\r\n      feels_like: 10.83,\r\n      pressure: 1015,\r\n      humidity: 64,\r\n      dew_point: 5.33,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 4.85,\r\n      wind_deg: 309,\r\n      wind_gust: 10.71,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632672000,\r\n      temp: 11.61,\r\n      feels_like: 10.58,\r\n      pressure: 1015,\r\n      humidity: 67,\r\n      dew_point: 5.69,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 5.15,\r\n      wind_deg: 313,\r\n      wind_gust: 10.12,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632675600,\r\n      temp: 10.79,\r\n      feels_like: 9.78,\r\n      pressure: 1015,\r\n      humidity: 71,\r\n      dew_point: 5.64,\r\n      uvi: 0,\r\n      clouds: 91,\r\n      visibility: 10000,\r\n      wind_speed: 4.68,\r\n      wind_deg: 312,\r\n      wind_gust: 9.51,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632679200,\r\n      temp: 11.08,\r\n      feels_like: 9.97,\r\n      pressure: 1015,\r\n      humidity: 66,\r\n      dew_point: 4.9,\r\n      uvi: 0,\r\n      clouds: 88,\r\n      visibility: 10000,\r\n      wind_speed: 4.18,\r\n      wind_deg: 305,\r\n      wind_gust: 9.52,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632682800,\r\n      temp: 11.04,\r\n      feels_like: 10.05,\r\n      pressure: 1015,\r\n      humidity: 71,\r\n      dew_point: 5.84,\r\n      uvi: 0,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 5.02,\r\n      wind_deg: 310,\r\n      wind_gust: 10.4,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632686400,\r\n      temp: 10.02,\r\n      feels_like: 9.04,\r\n      pressure: 1016,\r\n      humidity: 75,\r\n      dew_point: 5.94,\r\n      uvi: 0,\r\n      clouds: 63,\r\n      visibility: 10000,\r\n      wind_speed: 4.93,\r\n      wind_deg: 312,\r\n      wind_gust: 10.22,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632690000,\r\n      temp: 9.32,\r\n      feels_like: 6.79,\r\n      pressure: 1016,\r\n      humidity: 78,\r\n      dew_point: 5.77,\r\n      uvi: 0,\r\n      clouds: 44,\r\n      visibility: 10000,\r\n      wind_speed: 4.86,\r\n      wind_deg: 311,\r\n      wind_gust: 10.31,\r\n      weather: [\r\n        {\r\n          id: 802,\r\n          main: 'Clouds',\r\n          description: 'переменная облачность',\r\n          icon: '03n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632693600,\r\n      temp: 8.81,\r\n      feels_like: 6.31,\r\n      pressure: 1016,\r\n      humidity: 81,\r\n      dew_point: 5.77,\r\n      uvi: 0,\r\n      clouds: 35,\r\n      visibility: 10000,\r\n      wind_speed: 4.51,\r\n      wind_deg: 314,\r\n      wind_gust: 10.3,\r\n      weather: [\r\n        {\r\n          id: 802,\r\n          main: 'Clouds',\r\n          description: 'переменная облачность',\r\n          icon: '03n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632697200,\r\n      temp: 8.41,\r\n      feels_like: 5.91,\r\n      pressure: 1017,\r\n      humidity: 83,\r\n      dew_point: 5.74,\r\n      uvi: 0,\r\n      clouds: 30,\r\n      visibility: 10000,\r\n      wind_speed: 4.3,\r\n      wind_deg: 315,\r\n      wind_gust: 10.23,\r\n      weather: [\r\n        {\r\n          id: 802,\r\n          main: 'Clouds',\r\n          description: 'переменная облачность',\r\n          icon: '03n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632700800,\r\n      temp: 8.05,\r\n      feels_like: 5.48,\r\n      pressure: 1017,\r\n      humidity: 85,\r\n      dew_point: 5.76,\r\n      uvi: 0,\r\n      clouds: 26,\r\n      visibility: 10000,\r\n      wind_speed: 4.25,\r\n      wind_deg: 313,\r\n      wind_gust: 10.22,\r\n      weather: [\r\n        {\r\n          id: 802,\r\n          main: 'Clouds',\r\n          description: 'переменная облачность',\r\n          icon: '03n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632704400,\r\n      temp: 7.72,\r\n      feels_like: 5.04,\r\n      pressure: 1017,\r\n      humidity: 88,\r\n      dew_point: 5.84,\r\n      uvi: 0,\r\n      clouds: 13,\r\n      visibility: 10000,\r\n      wind_speed: 4.32,\r\n      wind_deg: 313,\r\n      wind_gust: 10.41,\r\n      weather: [\r\n        {\r\n          id: 801,\r\n          main: 'Clouds',\r\n          description: 'небольшая облачность',\r\n          icon: '02n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632708000,\r\n      temp: 7.4,\r\n      feels_like: 4.7,\r\n      pressure: 1017,\r\n      humidity: 89,\r\n      dew_point: 5.74,\r\n      uvi: 0,\r\n      clouds: 22,\r\n      visibility: 10000,\r\n      wind_speed: 4.22,\r\n      wind_deg: 315,\r\n      wind_gust: 10.31,\r\n      weather: [\r\n        {\r\n          id: 801,\r\n          main: 'Clouds',\r\n          description: 'небольшая облачность',\r\n          icon: '02n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632711600,\r\n      temp: 7.12,\r\n      feels_like: 4.31,\r\n      pressure: 1018,\r\n      humidity: 90,\r\n      dew_point: 5.64,\r\n      uvi: 0,\r\n      clouds: 24,\r\n      visibility: 10000,\r\n      wind_speed: 4.31,\r\n      wind_deg: 325,\r\n      wind_gust: 10.53,\r\n      weather: [\r\n        {\r\n          id: 801,\r\n          main: 'Clouds',\r\n          description: 'небольшая облачность',\r\n          icon: '02n'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632715200,\r\n      temp: 7.22,\r\n      feels_like: 4.51,\r\n      pressure: 1018,\r\n      humidity: 90,\r\n      dew_point: 5.64,\r\n      uvi: 0,\r\n      clouds: 31,\r\n      visibility: 10000,\r\n      wind_speed: 4.15,\r\n      wind_deg: 328,\r\n      wind_gust: 10.4,\r\n      weather: [\r\n        {\r\n          id: 802,\r\n          main: 'Clouds',\r\n          description: 'переменная облачность',\r\n          icon: '03d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632718800,\r\n      temp: 8.17,\r\n      feels_like: 5.58,\r\n      pressure: 1018,\r\n      humidity: 85,\r\n      dew_point: 5.77,\r\n      uvi: 0.26,\r\n      clouds: 45,\r\n      visibility: 10000,\r\n      wind_speed: 4.36,\r\n      wind_deg: 331,\r\n      wind_gust: 10.2,\r\n      weather: [\r\n        {\r\n          id: 802,\r\n          main: 'Clouds',\r\n          description: 'переменная облачность',\r\n          icon: '03d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632722400,\r\n      temp: 8.92,\r\n      feels_like: 6.45,\r\n      pressure: 1018,\r\n      humidity: 82,\r\n      dew_point: 5.94,\r\n      uvi: 0.75,\r\n      clouds: 54,\r\n      visibility: 10000,\r\n      wind_speed: 4.49,\r\n      wind_deg: 337,\r\n      wind_gust: 10.1,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    },\r\n    {\r\n      dt: 1632726000,\r\n      temp: 10.67,\r\n      feels_like: 9.7,\r\n      pressure: 1019,\r\n      humidity: 73,\r\n      dew_point: 6.14,\r\n      uvi: 1.2,\r\n      clouds: 100,\r\n      visibility: 10000,\r\n      wind_speed: 4.95,\r\n      wind_deg: 347,\r\n      wind_gust: 8.52,\r\n      weather: [\r\n        {\r\n          id: 804,\r\n          main: 'Clouds',\r\n          description: 'пасмурно',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      pop: 0\r\n    }\r\n  ],\r\n  daily: [\r\n    {\r\n      dt: 1632560400,\r\n      sunrise: 1632540345,\r\n      sunset: 1632583656,\r\n      moonrise: 1632590280,\r\n      moonset: 1632556920,\r\n      moon_phase: 0.64,\r\n      temp: {\r\n        day: 10.99,\r\n        min: 8.76,\r\n        max: 13.53,\r\n        night: 11.76,\r\n        eve: 13.1,\r\n        morn: 9.31\r\n      },\r\n      feels_like: {\r\n        day: 10.29,\r\n        night: 11.11,\r\n        eve: 12.16,\r\n        morn: 8.7\r\n      },\r\n      pressure: 1008,\r\n      humidity: 82,\r\n      dew_point: 8.04,\r\n      wind_speed: 5.26,\r\n      wind_deg: 290,\r\n      wind_gust: 9.71,\r\n      weather: [\r\n        {\r\n          id: 803,\r\n          main: 'Clouds',\r\n          description: 'облачно с прояснениями',\r\n          icon: '04d'\r\n        }\r\n      ],\r\n      clouds: 75,\r\n      pop: 0.36,\r\n      uvi: 2.3\r\n    },\r\n    {\r\n      dt: 1632646800,\r\n      sunrise: 1632626835,\r\n      sunset: 1632669923,\r\n      moonrise: 1632678180,\r\n      moonset: 1632647400,\r\n      moon_phase: 0.67,\r\n      temp: {\r\n        day: 13.27,\r\n        min: 10.02,\r\n        max: 15.23,\r\n        night: 10.02,\r\n        eve: 11.91,\r\n        morn: 12.49\r\n      },\r\n      feels_like: {\r\n        day: 12.48,\r\n        night: 9.04,\r\n        eve: 10.83,\r\n        morn: 12.12\r\n      },\r\n      pressure: 1013,\r\n      humidity: 70,\r\n      dew_point: 7.96,\r\n      wind_speed: 7.07,\r\n      wind_deg: 314,\r\n      wind_gust: 12.6,\r\n      weather: [\r\n        {\r\n          id: 500,\r\n          main: 'Rain',\r\n          description: 'небольшой дождь',\r\n          icon: '10d'\r\n        }\r\n      ],\r\n      clouds: 49,\r\n      pop: 0.32,\r\n      rain: 0.45,\r\n      uvi: 1.67\r\n    },\r\n    {\r\n      dt: 1632733200,\r\n      sunrise: 1632713325,\r\n      sunset: 1632756190,\r\n      moonrise: 1632766500,\r\n      moonset: 1632737820,\r\n      moon_phase: 0.7,\r\n      temp: {\r\n        day: 11.85,\r\n        min: 7.12,\r\n        max: 14.33,\r\n        night: 9.77,\r\n        eve: 12.83,\r\n        morn: 7.12\r\n      },\r\n      feels_like: {\r\n        day: 10.81,\r\n        night: 8.16,\r\n        eve: 11.87,\r\n        morn: 4.31\r\n      },\r\n      pressure: 1019,\r\n      humidity: 66,\r\n      dew_point: 5.85,\r\n      wind_speed: 5.06,\r\n      wind_deg: 8,\r\n      wind_gust: 10.53,\r\n      weather: [\r\n        {\r\n          id: 500,\r\n          main: 'Rain',\r\n          description: 'небольшой дождь',\r\n          icon: '10d'\r\n        }\r\n      ],\r\n      clouds: 100,\r\n      pop: 0.36,\r\n      rain: 0.13,\r\n      uvi: 2.21\r\n    },\r\n    {\r\n      dt: 1632819600,\r\n      sunrise: 1632799816,\r\n      sunset: 1632842458,\r\n      moonrise: 1632855300,\r\n      moonset: 1632827880,\r\n      moon_phase: 0.73,\r\n      temp: {\r\n        day: 12.42,\r\n        min: 8.32,\r\n        max: 13.36,\r\n        night: 10.61,\r\n        eve: 11.55,\r\n        morn: 8.38\r\n      },\r\n      feels_like: {\r\n        day: 11.31,\r\n        night: 9.58,\r\n        eve: 10.51,\r\n        morn: 6.98\r\n      },\r\n      pressure: 1026,\r\n      humidity: 61,\r\n      dew_point: 5.24,\r\n      wind_speed: 4.12,\r\n      wind_deg: 42,\r\n      wind_gust: 7.3,\r\n      weather: [\r\n        {\r\n          id: 500,\r\n          main: 'Rain',\r\n          description: 'небольшой дождь',\r\n          icon: '10d'\r\n        }\r\n      ],\r\n      clouds: 100,\r\n      pop: 0.2,\r\n      rain: 0.31,\r\n      uvi: 1.17\r\n    },\r\n    {\r\n      dt: 1632906000,\r\n      sunrise: 1632886306,\r\n      sunset: 1632928726,\r\n      moonrise: 1632944760,\r\n      moonset: 1632917580,\r\n      moon_phase: 0.75,\r\n      temp: {\r\n        day: 10.66,\r\n        min: 6.53,\r\n        max: 12.85,\r\n        night: 9.22,\r\n        eve: 11.86,\r\n        morn: 6.53\r\n      },\r\n      feels_like: {\r\n        day: 9.48,\r\n        night: 7.81,\r\n        eve: 10.35,\r\n        morn: 4.29\r\n      },\r\n      pressure: 1032,\r\n      humidity: 65,\r\n      dew_point: 4.45,\r\n      wind_speed: 4.08,\r\n      wind_deg: 63,\r\n      wind_gust: 7.03,\r\n      weather: [\r\n        {\r\n          id: 500,\r\n          main: 'Rain',\r\n          description: 'небольшой дождь',\r\n          icon: '10d'\r\n        }\r\n      ],\r\n      clouds: 98,\r\n      pop: 0.2,\r\n      rain: 0.13,\r\n      uvi: 2.61\r\n    },\r\n    {\r\n      dt: 1632992400,\r\n      sunrise: 1632972797,\r\n      sunset: 1633014994,\r\n      moonrise: 1633034880,\r\n      moonset: 1633006680,\r\n      moon_phase: 0.79,\r\n      temp: {\r\n        day: 12.39,\r\n        min: 5.74,\r\n        max: 14.22,\r\n        night: 10.01,\r\n        eve: 12.58,\r\n        morn: 5.74\r\n      },\r\n      feels_like: {\r\n        day: 10.57,\r\n        night: 8.16,\r\n        eve: 10.81,\r\n        morn: 3.66\r\n      },\r\n      pressure: 1034,\r\n      humidity: 34,\r\n      dew_point: -2.76,\r\n      wind_speed: 3.92,\r\n      wind_deg: 92,\r\n      wind_gust: 8.12,\r\n      weather: [\r\n        {\r\n          id: 801,\r\n          main: 'Clouds',\r\n          description: 'небольшая облачность',\r\n          icon: '02d'\r\n        }\r\n      ],\r\n      clouds: 14,\r\n      pop: 0,\r\n      uvi: 3\r\n    },\r\n    {\r\n      dt: 1633078800,\r\n      sunrise: 1633059288,\r\n      sunset: 1633101262,\r\n      moonrise: 0,\r\n      moonset: 1633095300,\r\n      moon_phase: 0.82,\r\n      temp: {\r\n        day: 13.27,\r\n        min: 6.39,\r\n        max: 14.94,\r\n        night: 10.63,\r\n        eve: 12.9,\r\n        morn: 6.39\r\n      },\r\n      feels_like: {\r\n        day: 11.44,\r\n        night: 8.69,\r\n        eve: 11.03,\r\n        morn: 4.39\r\n      },\r\n      pressure: 1029,\r\n      humidity: 30,\r\n      dew_point: -3.96,\r\n      wind_speed: 4.24,\r\n      wind_deg: 101,\r\n      wind_gust: 7.3,\r\n      weather: [\r\n        {\r\n          id: 802,\r\n          main: 'Clouds',\r\n          description: 'переменная облачность',\r\n          icon: '03d'\r\n        }\r\n      ],\r\n      clouds: 32,\r\n      pop: 0,\r\n      uvi: 3\r\n    },\r\n    {\r\n      dt: 1633165200,\r\n      sunrise: 1633145780,\r\n      sunset: 1633187531,\r\n      moonrise: 1633125420,\r\n      moonset: 1633183440,\r\n      moon_phase: 0.85,\r\n      temp: {\r\n        day: 13.52,\r\n        min: 7.32,\r\n        max: 15.25,\r\n        night: 11.38,\r\n        eve: 13.31,\r\n        morn: 7.32\r\n      },\r\n      feels_like: {\r\n        day: 11.84,\r\n        night: 9.59,\r\n        eve: 11.58,\r\n        morn: 6.6\r\n      },\r\n      pressure: 1025,\r\n      humidity: 35,\r\n      dew_point: -1.56,\r\n      wind_speed: 2.28,\r\n      wind_deg: 78,\r\n      wind_gust: 5,\r\n      weather: [\r\n        {\r\n          id: 800,\r\n          main: 'Clear',\r\n          description: 'ясно',\r\n          icon: '01d'\r\n        }\r\n      ],\r\n      clouds: 6,\r\n      pop: 0,\r\n      uvi: 3\r\n    }\r\n  ]\r\n}\r\n\r\nexport type OneCall = typeof oneCall\r\n\r\nexport const LOCALSTORAGE_DATA_NAME = 'NewCitys'\r\n\r\nexport const KEY = '4276bdd223155b7e5bdf58f8ea7014c9'\r\n","export const firstUpperCase = (value = 'Weather'): string => value.charAt(0).toUpperCase() + value.substring(1)\r\nexport const everyN = (arr: any, n: number): any => arr.filter((e: any, i: number) => i % n === 0)\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\nexport const giveColor = (n:number) => {\r\n  const colors = [\r\n    'rgba(200,240, 225, 0.1)',\r\n    'rgba(200,230, 215, 0.2)',\r\n    'rgba(200,220, 205, 0.2)',\r\n    'rgba(200,210, 195, 0.2)',\r\n    'rgba(200,200, 185, 0.2)',\r\n    'rgba(200,190, 175, 0.2)',\r\n    'rgba(200,180, 165, 0.2)',\r\n    'rgba(200,170, 155, 0.2)',\r\n    'rgba(200,150, 145, 0.2)',\r\n    'rgba(225,0, 0, 0.3)',\r\n    'rgba(230,0, 0, 0.3)',\r\n    'rgba(235,0, 0, 0.3)',\r\n    'rgba(245,0, 0, 0.3)',\r\n    'rgba(250,0, 0, 0.3)',\r\n    'rgba(255,0, 0, 0.3)',\r\n    'rgba(265,0, 0, 0.3)',\r\n    'rgba(260,0, 0, 0.3)',\r\n    'rgba(265,0, 0, 0.3)',\r\n    'rgba(270,0, 0, 0.4)',\r\n    'rgba(225,0, 0, 0.4)',\r\n    'rgba(230,0, 0, 0.4)',\r\n    'rgba(235,0, 0, 0.4)',\r\n    'rgba(240,0, 0, 0.4)',\r\n    'rgba(245,0, 0, 0.4)',\r\n    'rgba(250,0, 0, 0.4)',\r\n    'rgba(255,0, 0, 0.4)',\r\n    'rgba(260,0, 0, 0.4)',\r\n    'rgba(265,0, 0, 0.5)',\r\n    'rgba(2,0, 0, 0.5)',\r\n    'rgba(230,0, 0, 5)',\r\n    'rgba(250,0, 0, 0.5)',\r\n    'rgba(250,0, 0, 0.5)',\r\n    'rgba(250,0, 0, 0.5)',\r\n    'rgba(250,0, 0, 0.5)',\r\n    'rgba(250,0, 0, 0.5)',\r\n    'rgba(250,0, 0, 0.6)',\r\n    'rgba(250,0, 0, 0.7)',\r\n    'rgba(250,0, 0, 0.8)',\r\n    'rgba(250,0, 0, 0.9)',\r\n    'rgba(250,0, 0, 1)',\r\n  ]\r\n  const colorsNegative = [\r\n    'rgba(66, 130, 255, 1)',\r\n    'rgba(66, 130, 255, 0.1)',\r\n    'rgba(66, 130, 255, 0.2)',\r\n    'rgba(66, 130, 255, 0.3)',\r\n    'rgba(66, 130, 255, 0.4)',\r\n    'rgba(66, 130, 255, 0.5)',\r\n    'rgba(66, 130, 255, 0.6)',\r\n    'rgba(66, 130, 255, 0.7)',\r\n    'rgba(66, 130, 255, 0.8)',\r\n    'rgba(66, 130, 255, 0.9)',\r\n    'rgba(66, 150, 255, 1)',\r\n    'rgba(66, 150, 255, 0.1)',\r\n    'rgba(66, 150, 255, 0.2)',\r\n    'rgba(66, 150, 255, 0.3)',\r\n    'rgba(66, 150, 255, 0.4)',\r\n    'rgba(66, 150, 255, 0.5)',\r\n    'rgba(66, 150, 255, 0.6)',\r\n    'rgba(66, 150, 255, 0.7)',\r\n    'rgba(66, 150, 255, 0.8)',\r\n    'rgba(66, 150, 255, 0.9)',\r\n    'rgba(66, 170, 255, 1)',\r\n    'rgba(66, 170, 255, 0.1)',\r\n    'rgba(66, 170, 255, 0.2)',\r\n    'rgba(66, 170, 255, 0.3)',\r\n    'rgba(66, 170, 255, 0.4)',\r\n    'rgba(66, 170, 255, 0.5)',\r\n    'rgba(66, 170, 255, 0.6)',\r\n    'rgba(66, 170, 255, 0.7)',\r\n    'rgba(66, 170, 255, 0.8)',\r\n    'rgba(66, 170, 255, 0.9)',\r\n  ]\r\n  let rez = ''\r\n  if (n >= 40) {\r\n    rez = 'rgba(250,0, 0, 1)'\r\n  } else if (n > 0 || n > 40) {\r\n    rez = colors[n]\r\n  } else if (n === 0) {\r\n    rez = 'rgba(0, 153, 153, 1)'\r\n  } else if (n > -29) {\r\n    const z = Math.abs(n)\r\n    rez = colorsNegative[z]\r\n  } else if (n <= -30) {\r\n    rez = 'rgba(135, 206, 250, 1)'\r\n  }\r\n  return rez\r\n}\r\n","/* eslint-disable max-len */\r\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\n// https://github.com/AugustoRavazoli/react-weather-app/blob/main/src/App.js\r\nimport React, { useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ru'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container'\r\nimport {\r\n  Button, Card, Grid, Paper\r\n} from '@mui/material'\r\nimport { makeStyles, styled } from '@material-ui/styles'\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles'\r\nimport Stack from '@material-ui/core/Stack'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  Box, CardContent,\r\n} from '@material-ui/core'\r\nimport { useDetailed } from '../hooks/detailed.hook'\r\nimport { everyN, giveColor } from '../components/functionHelper'\r\n\r\nconst theme = createTheme()\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    color: theme.palette.primary.main\r\n  },\r\n  test: {\r\n    backgroundColor: '#cecee',\r\n  },\r\n  card: {\r\n    backgroundImage: 'url(https://media.istockphoto.com/photos/the-changes-of-weather-a-natural-phenomenon-of-the-differences-of-picture-id1257525705?b=1&k=20&m=1257525705&s=170667a&w=0&h=8APfi2HN3sWhvfqC5CHs0dkhMDpX1reiiOOD2sBJAj4=)',\r\n    backgroundColor: '#cecece',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    minHeight: '200px',\r\n    marginBottom: '20px',\r\n  },\r\n  cardContentMain: {\r\n    backgroundColor: '#96c1e22b'\r\n  },\r\n  cardDaily: {\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center !important',\r\n      gap: '15px'\r\n    },\r\n    backgroundColor: '#c3c6cb',\r\n    gap: '15px',\r\n    paddingTop: '15px',\r\n    paddingBottom: '15px',\r\n    '& img': {\r\n      width: '80px',\r\n      backgroundColor: 'orange'\r\n    }\r\n  },\r\n  c: {\r\n    marginRight: '10px',\r\n  },\r\n  itemsDealy: {\r\n    marginBottom: '20px',\r\n    '& span': {\r\n      marginBottom: '10px'\r\n    },\r\n    '& img': {\r\n      backgroundColor: '#cecece',\r\n    },\r\n    '& .css-1clyo4s-MuiStack-root': {\r\n      marginBottom: '20px',\r\n    },\r\n    '& .css-0': {\r\n      height: '100px',\r\n      boxSizing: 'border-box',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n  textCapitalize: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  typographyH2: {\r\n    marginBottom: '20px !important'\r\n  }\r\n}))\r\nconst Item = styled(Paper)(() => ({\r\n  textAlign: 'center',\r\n  minHeight: '250px',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'end',\r\n}))\r\nconst AvatarMain = styled(Avatar)(() => ({\r\n  height: '70px !important',\r\n  width: '70px !important',\r\n}))\r\nexport const DetailForecast = () => {\r\n  const { slug } = useParams<Slug>()\r\n  const classes = useStyles()\r\n  const dataOneCalls = useSelector((state: any) => state.oneCall)\r\n  const { createDetailed } = useDetailed()\r\n  const ItemsDealy = () => {\r\n    const currentID = dataOneCalls[0] ? dataOneCalls[0].hourly : []\r\n    const DayToDayH = dataOneCalls[0]\r\n      ? everyN(currentID, 3)\r\n      : []\r\n    return DayToDayH.slice(0, 9).map((el: Hourly): JSX.Element => {\r\n      const t = `${Math.ceil(el.temp)}`\r\n      // eslint-disable-next-line no-plusplus\r\n      let g = 0\r\n      // eslint-disable-next-line no-plusplus\r\n      for (let i = 0; i <= +t; i++) {\r\n        g += 3\r\n      }\r\n      const styleTest = {\r\n        padding: `${+t < 0 ? (g / 50) * 100 : 0}% 0 ${+t >= 0 ? (g / 50) * 100 : 0}% 0`\r\n      }\r\n      const paperTempHour = {\r\n        padding: '3px 7px',\r\n        background: `${giveColor(+t)}`,\r\n      }\r\n      const dealyAvatar = `http://openweathermap.org/img/wn/${el.weather\r\n        .map((item: Weather) => item.icon)}@2x.png`\r\n      return (\r\n        <Grid\r\n          item\r\n          key={el.dt}\r\n          className={classes.itemsDealy}\r\n        >\r\n          <Box component=\"span\">\r\n            <Typography component=\"span\">\r\n              { moment.unix(el.dt).locale('ru').format('ddd') }\r\n            </Typography>\r\n            <Typography component=\"span\">\r\n              { moment.unix(el.dt).hours() }\r\n              :\r\n              { moment.unix(el.dt).minutes() }\r\n              0\r\n            </Typography>\r\n          </Box>\r\n          <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              src={dealyAvatar}\r\n            />\r\n          </Stack>\r\n          <Box component=\"div\" style={styleTest}>\r\n            <Paper variant=\"outlined\" style={paperTempHour}>\r\n              {Math.ceil(el.temp)}\r\n              °С\r\n            </Paper>\r\n          </Box>\r\n        </Grid>\r\n      )\r\n    })\r\n  }\r\n  const WeatherToDay = () => {\r\n    const currentTemp = `${Math.ceil(dataOneCalls[0] && dataOneCalls[0].current.temp)}°С`\r\n    const feelsLike = `${Math.ceil(dataOneCalls[0] && dataOneCalls[0].current.feels_like)}°C`\r\n    const curentAvater = `http://openweathermap.org/img/wn/${dataOneCalls[0] && dataOneCalls[0].current.weather[0].icon}@2x.png`\r\n    const curentAvaterStyle = {\r\n      backgroundColor: '#ec6e4cf2',\r\n    }\r\n    return (\r\n      <Item>\r\n        <Card className={classes.card}>\r\n          <CardContent className={classes.cardContentMain}>\r\n            <Typography\r\n              variant=\"caption\"\r\n              component=\"div\"\r\n              textAlign=\"start\"\r\n            >\r\n              В данный момент\r\n            </Typography>\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={10} textAlign=\"start\">\r\n                <Grid container>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"h4\"\r\n                    flexGrow={1}\r\n                  >\r\n                    {currentTemp}\r\n                  </Typography>\r\n                  <Box\r\n                    component=\"div\"\r\n                    alignItems=\"self-end\"\r\n                    flexGrow={15}\r\n                  >\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      <strong>По ощущениям: </strong>\r\n                      {' '}\r\n                      {feelsLike}\r\n                      {' '}\r\n                      {dataOneCalls[0] && dataOneCalls[0].current.weather[0].description}\r\n                      <br />\r\n                      <strong>Скорость ветра:</strong>\r\n                      {' '}\r\n                      {dataOneCalls[0] && dataOneCalls[0].current.wind_speed}\r\n                      {' '}\r\n                      М/С\r\n                      <br />\r\n                      <strong>Восход:</strong>\r\n                      {' '}\r\n                      {moment.unix(dataOneCalls[0] && dataOneCalls[0].current.sunrise).hours()}\r\n                      :\r\n                      {moment.unix(dataOneCalls[0] && dataOneCalls[0].current.sunrise).minutes()}\r\n                      <br />\r\n                      <strong>Закат:</strong>\r\n                      {' '}\r\n                      {moment.unix(dataOneCalls[0] && dataOneCalls[0].current.sunset).hours()}\r\n                      :\r\n                      {moment.unix(dataOneCalls[0] && dataOneCalls[0].current.sunset).minutes()}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Stack direction=\"row\" justifyContent=\"end\">\r\n                  <AvatarMain\r\n                    alt=\"Remy Sharp\"\r\n                    src={curentAvater}\r\n                    style={curentAvaterStyle}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n        </Card>\r\n        <Grid\r\n          container\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <ItemsDealy />\r\n        </Grid>\r\n\r\n      </Item>\r\n    )\r\n  }\r\n  useEffect(() => {\r\n    const reg = /[a-z][a-z0-9]*=(-\\d+(\\.\\d+)?)*(\\d+(\\.\\d+)?)/g\r\n    const coord = window.location.href.match(reg)\r\n    if (coord) {\r\n      createDetailed(coord[0], coord[1])\r\n    }\r\n  }, [createDetailed])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container maxWidth=\"md\">\r\n        <Button href=\"https://denisavilov.github.io/weatherForecast\"> На главную </Button>\r\n        <Typography component=\"h2\" className={classes.typographyH2}>\r\n          <strong>Погода на cегодня</strong>\r\n          {' '}\r\n          <strong>{ slug }</strong>\r\n        </Typography>\r\n        <WeatherToDay />\r\n        <br />\r\n        <Typography component=\"h2\" className={classes.typographyH2}>\r\n          <strong>Суточный прогноз на 8 дней</strong>\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          justifyContent=\"space-around\"\r\n          alignSelf=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.cardDaily}\r\n        >\r\n          {dataOneCalls[0] && dataOneCalls[0].daily.map((el: Daily) => {\r\n            const dealyAvatar = `http://openweathermap.org/img/wn/${el.weather\r\n              .map((item: Weather) => item.icon)}@2x.png`\r\n            return (\r\n              <Grid\r\n                item\r\n                key={el.dt}\r\n              >\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography component=\"span\">\r\n                      <strong>Дата:</strong>\r\n                      <br />\r\n                      { moment.unix(el.dt).locale('ru').format('dddd') }\r\n                      {' '}\r\n                      { moment.unix(el.dt).date()}\r\n                      .\r\n                      { moment.unix(el.dt).month() + 1}\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography component=\"span\">\r\n                      <strong>Описание:</strong>\r\n                      <br />\r\n                      { el.weather.map((item: Weather) => item.description) }\r\n                    </Typography>\r\n                    <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n                      <Avatar\r\n                        alt=\"alt\"\r\n                        src={dealyAvatar}\r\n                      />\r\n                    </Stack>\r\n                    <Typography component=\"span\">\r\n                      <strong>По ощущениям:</strong>\r\n                      <br />\r\n                      Утром:\r\n                      {' '}\r\n                      {Math.ceil(el.feels_like.morn)}\r\n                      °С\r\n                      <br />\r\n                      Днем:\r\n                      {' '}\r\n                      {Math.ceil(el.feels_like.day)}\r\n                      °С\r\n                      <br />\r\n                      Вечером:\r\n                      {' '}\r\n                      { Math.ceil(el.feels_like.eve) }\r\n                      °С\r\n                      <br />\r\n                      Ночью:\r\n                      {' '}\r\n                      { Math.ceil(el.feels_like.day) }\r\n                      °С\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography component=\"span\">\r\n                      <strong>Скорость ветра:</strong>\r\n                      {' '}\r\n                      {el.wind_speed}\r\n                      {' '}\r\n                      М/С\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography component=\"span\">\r\n                      <strong>Восход:</strong>\r\n                      {' '}\r\n                      {moment.unix(el.sunrise).hours()}\r\n                      :\r\n                      {moment.unix(el.sunrise).minutes()}\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography component=\"span\">\r\n                      <strong>Закат:</strong>\r\n                      {' '}\r\n                      {moment.unix(el.sunset).hours()}\r\n                      :\r\n                      {moment.unix(el.sunset).minutes()}\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography component=\"span\">\r\n                      <strong>Восход луны:</strong>\r\n                      {' '}\r\n                      {moment.unix(el.moonrise).hours()}\r\n                      :\r\n                      {moment.unix(el.moonrise).minutes()}\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography component=\"span\">\r\n                      <strong>Закат луны:</strong>\r\n                      {' '}\r\n                      {moment.unix(el.moonset).hours()}\r\n                      :\r\n                      {moment.unix(el.moonset).minutes()}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\ntype Slug = {\r\n  slug: string\r\n}\r\nconst weather = {\r\n  id: 803,\r\n  main: 'Clouds',\r\n  description: 'облачно с прояснениями',\r\n  icon: '04d'\r\n}\r\ntype Weather = typeof weather\r\nconst daily = {\r\n  dt: 1632560400,\r\n  sunrise: 1632540345,\r\n  sunset: 1632583656,\r\n  moonrise: 1632590280,\r\n  moonset: 1632556920,\r\n  moon_phase: 0.64,\r\n  temp: {\r\n    day: 10.99,\r\n    min: 8.76,\r\n    max: 13.53,\r\n    night: 11.76,\r\n    eve: 13.1,\r\n    morn: 9.31\r\n  },\r\n  feels_like: {\r\n    day: 10.29,\r\n    night: 11.11,\r\n    eve: 12.16,\r\n    morn: 8.7\r\n  },\r\n  pressure: 1008,\r\n  humidity: 82,\r\n  dew_point: 8.04,\r\n  wind_speed: 5.26,\r\n  wind_deg: 290,\r\n  wind_gust: 9.71,\r\n  weather: [\r\n    {\r\n      id: 803,\r\n      main: 'Clouds',\r\n      description: 'облачно с прояснениями',\r\n      icon: '04d'\r\n    }\r\n  ],\r\n  clouds: 75,\r\n  pop: 0.36,\r\n  uvi: 2.3\r\n}\r\ntype Daily = typeof daily\r\nconst hourly = {\r\n  dt: 1632556800,\r\n  temp: 10.94,\r\n  feels_like: 10.26,\r\n  pressure: 1008,\r\n  humidity: 83,\r\n  dew_point: 8.17,\r\n  uvi: 1.47,\r\n  clouds: 80,\r\n  visibility: 10000,\r\n  wind_speed: 1.97,\r\n  wind_deg: 225,\r\n  wind_gust: 2.6,\r\n  weather: [\r\n    {\r\n      id: 803,\r\n      main: 'Clouds',\r\n      description: 'облачно с прояснениями',\r\n      icon: '04d'\r\n    }\r\n  ],\r\n  pop: 0.04\r\n}\r\ntype Hourly = typeof hourly\r\n","import React, { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport superagent from 'superagent'\r\nimport { createDetailedAction } from '../redux-toolkit'\r\nimport { KEY } from '../types'\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\nexport const useDetailed = () => {\r\n  const dispatch = useDispatch()\r\n  const createDetailed = useCallback(async (lat: string, lon: string) => {\r\n    try {\r\n      const response = await superagent.get(\r\n        // eslint-disable-next-line max-len\r\n        `https://api.openweathermap.org/data/2.5/onecall?${lat}&${lon}&units=metric&lang=ru&appid=${KEY}`\r\n      )\r\n      if (response.ok) {\r\n        const data = await JSON.parse(response.text)\r\n        dispatch(createDetailedAction(data))\r\n      }\r\n    } catch (err: any) { console.log(err.response.body.massage) }\r\n  }, [])\r\n  return { createDetailed }\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport { createTheme, responsiveFontSizes } from '@mui/material/styles';\r\n\r\nexport const Header = ({ children }: HeaderProps): JSX.Element => (\r\n  <Typography\r\n    variant=\"h4\"\r\n    gutterBottom\r\n    component=\"div\"\r\n    align=\"center\"\r\n  >\r\n    {children}\r\n  </Typography>\r\n)\r\n\r\ntype HeaderProps = {\r\n    children: string\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport function useLocalStorage<T>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, (value: T | ((val: T) => T)) => void] {\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\n  const setValue = (value: T | ((val: T) => T)) => {\r\n    try {\r\n      const valueToStore = value instanceof Function\r\n        ? value(storedValue)\r\n        : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport superagent from 'superagent'\r\nimport {\r\n  showAlertAction, addCityNameAction, addCityAction, updateCityAction\r\n} from '../redux-toolkit'\r\nimport { useLocalStorage } from './locallStorige.hook'\r\nimport { LOCALSTORAGE_DATA_NAME } from '../types';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\nexport const useAddCitys = () => {\r\n  const dispatch = useDispatch()\r\n  const [storedValue, setValue] = useLocalStorage(\r\n    LOCALSTORAGE_DATA_NAME, Array<string>()\r\n  )\r\n  const MASSAGE = ''\r\n  const KEY = '4276bdd223155b7e5bdf58f8ea7014c9'\r\n  const addNewCity = useCallback(async (cityName: string) => {\r\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\n    const superagentTest = async (el: string) => {\r\n      try {\r\n        // eslint-disable-next-line @typescript-eslint/no-shadow\r\n        const response = await superagent.get(\r\n          // eslint-disable-next-line max-len\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${el}&units=metric&lang=ru&appid=${KEY}`\r\n        )\r\n        if (response.ok) {\r\n          const data = await JSON.parse(response.text)\r\n          setValue((prev) => [...prev, data.name])\r\n          dispatch(addCityNameAction(data.name))\r\n          dispatch(addCityAction({ city: data }))\r\n          dispatch(showAlertAction({\r\n            massage: `Город: ${data.name}  добавлен.`,\r\n            severity: 'success',\r\n            severityRu: 'Успех',\r\n          }))\r\n        }\r\n      } catch (err: any) {\r\n        const { url } = err.response.req\r\n        const resErrorName = url.match(/=(.*?)&/)\r\n        // eslint-disable-next-line no-unused-expressions\r\n        err.response.body.message === 'city not found'\r\n        && dispatch(showAlertAction({\r\n          massage: `Нет города \r\n          ${resErrorName[1]}.\r\n          Повторите попытку. Код ошибки ${err.response.body.cod}`,\r\n          severity: 'error',\r\n          severityRu: 'Ошибка',\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (storedValue.length) {\r\n      const rez = JSON\r\n        .parse(localStorage.getItem(LOCALSTORAGE_DATA_NAME) || '[]')\r\n        .find((el: string) => el === cityName)\r\n      if (rez) {\r\n        dispatch(showAlertAction({\r\n          massage: `Город: ${cityName}  уже есть. ${MASSAGE}`,\r\n          severity: 'info',\r\n          severityRu: 'Внимание',\r\n        }))\r\n      } else {\r\n        superagentTest(cityName)\r\n      }\r\n    } else {\r\n      superagentTest(cityName)\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [setValue, storedValue])\r\n\r\n  const removeCityLocal = useCallback((city: string) => {\r\n    const loc = JSON.parse(localStorage.getItem(LOCALSTORAGE_DATA_NAME) || '[]')\r\n    const item = loc.filter((el: string) => el !== city)\r\n    setValue(JSON.parse(JSON.stringify(item)))\r\n  }, [setValue])\r\n\r\n  const updateCity = useCallback(async (city: string) => {\r\n    try {\r\n      // eslint-disable-next-line @typescript-eslint/no-shadow\r\n      const response = await superagent.get(\r\n        // eslint-disable-next-line max-len\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=ru&appid=${KEY}`\r\n      )\r\n      if (response.ok) {\r\n        const data = await JSON.parse(response.text)\r\n        dispatch(updateCityAction({ city: data }))\r\n        dispatch(showAlertAction({\r\n          massage: `Данные города ${data.name} обновлены.`,\r\n          severity: 'info',\r\n          severityRu: 'Информация',\r\n        }))\r\n      }\r\n    } catch (err: any) { console.log(err.response.body.message) }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  return { addNewCity, removeCityLocal, updateCity }\r\n}\r\n","import React, { useState } from 'react'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching'\r\nimport {\r\n  Formik, Form, ErrorMessage, Field\r\n} from 'formik'\r\nimport { Grid } from '@material-ui/core'\r\nimport { useAddCitys } from '../../hooks/addCity.hook'\r\n\r\nexport const FormField = (): JSX.Element => {\r\n  const { addNewCity } = useAddCitys()\r\n  const [value, setValues] = useState<string>('')\r\n  const initialValues: InitialValuesForm = {\r\n    cityName: ''\r\n  }\r\n  const validate = (e: InitialValuesForm): ErrorForm => {\r\n    setValues(e.cityName)\r\n    const error: ErrorForm = {}\r\n    if (!e.cityName.length) {\r\n      error.cityName = 'Поле не должно быть пустым!'\r\n    } else if (e.cityName.length <= 3) {\r\n      error.cityName = 'Введите больше 3 символов'\r\n    }\r\n    return error\r\n  }\r\n  const onSubmit = (\r\n    cityName: InitialValuesForm,\r\n    { resetForm }: any\r\n  ): void => {\r\n    addNewCity(cityName.cityName)\r\n    resetForm({ cityName: '' })\r\n    setValues('')\r\n  }\r\n  const formStyle = {\r\n    display: 'flex'\r\n  }\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={validate}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {() => (\r\n          <Form style={formStyle}>\r\n            <Field name=\"cityName\">\r\n              {(props: any) => (\r\n                <>\r\n                  <>\r\n                    <TextField\r\n                      placeholder=\"Ведите город\"\r\n                      variant=\"standard\"\r\n                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                      {...props.field}\r\n                      value={value}\r\n                    />\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      endIcon={<LocationSearchingIcon />}\r\n                      type=\"submit\"\r\n                      size=\"small\"\r\n                      disabled={!!props.meta.error}\r\n                    >\r\n                      Добавить\r\n                    </Button>\r\n                  </>\r\n                  <>\r\n                    <ErrorMessage name=\"cityName\">\r\n                      {(error: React.ReactNode) => (\r\n                        <div className=\"error\">\r\n                          {' '}\r\n                          {error}\r\n                          {' '}\r\n                        </div>\r\n                      )}\r\n                    </ErrorMessage>\r\n                  </>\r\n                </>\r\n              )}\r\n            </Field>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Grid>\r\n\r\n  )\r\n}\r\n\r\ntype InitialValuesForm = {\r\n  cityName: string\r\n}\r\ntype ErrorForm = {\r\n    cityName?: string\r\n}\r\n","import * as React from 'react'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemButton from '@mui/material/ListItemButton'\r\nimport ListItemIcon from '@mui/material/ListItemIcon'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport UpdateIcon from '@mui/icons-material/Update'\r\nimport Stack from '@mui/material/Stack'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup,\r\n} from 'react-transition-group'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { useRef } from 'react'\r\nimport { removeCityAction } from '../redux-toolkit'\r\nimport { CitysWeather } from '../types'\r\nimport { useAddCitys } from '../hooks/addCity.hook'\r\n\r\ntype ListItems = {\r\n  city: CitysWeather\r\n  date: Date\r\n}\r\nconst useStyle = makeStyles({\r\n  avatar: {\r\n    background: '#a9a2a2b3',\r\n  },\r\n})\r\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\nexport const ListItems = () => {\r\n  const classes = useStyle()\r\n  const nodeRef = useRef(null)\r\n  const { removeCityLocal, updateCity } = useAddCitys()\r\n  const dispatch = useDispatch()\r\n  const citysItems = useSelector((state: any) => state.shortForecast)\r\n  return (\r\n    <List\r\n      sx={{ width: '100%', minWidth: 300, bgcolor: 'background.paper' }}\r\n    >\r\n      <TransitionGroup>\r\n        {citysItems.map((value: ListItems) => {\r\n          const labelId = 'checkbox-list-label'\r\n          const desc = `${Math.ceil(value.city.main.temp_max)}°/${Math.ceil(value.city.main.temp_min)}°\r\n              ${value.city.name}\r\n            ${value.city.weather.map((data) => data.description)}`\r\n          const icon = `http://openweathermap.org/img/wn/${value.city.weather\r\n            .map((item) => item.icon)}@2x.png`\r\n          const descS = 'Подробней о погоде.'\r\n          return (\r\n            <CSSTransition\r\n              key={value.city.id}\r\n              timeout={{\r\n                enter: 500,\r\n                exit: 350\r\n              }}\r\n              classNames=\"item\"\r\n              nodeRef={nodeRef}\r\n            >\r\n              <ListItem\r\n                // key={value.city.id}\r\n                ref={nodeRef}\r\n                secondaryAction={(\r\n                  <>\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      onClick={\r\n                          () => updateCity(value.city.name)\r\n                        }\r\n                    >\r\n                      <UpdateIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      onClick={() => {\r\n                        dispatch(removeCityAction({ id: value.city.id }))\r\n                        removeCityLocal(value.city.name)\r\n                        // console.log('value.city.name', value.city.name)\r\n                      }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </>\r\n                  )}\r\n                disablePadding\r\n              >\r\n                <ListItemButton\r\n                  role={undefined}\r\n                  dense\r\n                  component={NavLink}\r\n                  to={`/detailed/${value.city.name}?lat=${value.city.coord.lat}&lon=${value.city.coord.lon}`}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                      <Avatar\r\n                        alt=\"Remy Sharp\"\r\n                        src={icon}\r\n                        className={classes.avatar}\r\n                      />\r\n                    </Stack>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    id={labelId}\r\n                    primary={desc}\r\n                    secondary={descS}\r\n                  />\r\n                </ListItemButton>\r\n\r\n              </ListItem>\r\n            </CSSTransition>\r\n          )\r\n        })}\r\n      </TransitionGroup>\r\n    </List>\r\n\r\n  )\r\n}\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport React from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport { Header } from '../components/Header'\r\nimport { FormField } from '../components/form/Form'\r\nimport { ListItems } from '../components/ListItems'\r\n\r\nexport const ShortForecast = () => (\r\n  <Container maxWidth=\"md\">\r\n    <Header>\r\n      Порогноз погоды\r\n    </Header>\r\n    <FormField />\r\n    <ListItems />\r\n  </Container>\r\n)\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport React, { useCallback, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport superagent from 'superagent'\r\nimport { useRoutes } from './routes'\r\nimport { useLocalStorage } from './hooks/locallStorige.hook'\r\nimport { LOCALSTORAGE_DATA_NAME } from './types'\r\nimport './index.css'\r\nimport { addCityAction, addCityNameAction } from './redux-toolkit'\r\n\r\nexport const App = () => {\r\n  const dispatch = useDispatch()\r\n  const [storedValue, setStoredValue] = useLocalStorage(\r\n    LOCALSTORAGE_DATA_NAME, []\r\n  )\r\n  const stateLocalStorage = useSelector((state: any) => state.localCallSlice)\r\n  useEffect(() => {\r\n    if (storedValue && !stateLocalStorage.length) {\r\n      const superagentTest = async (el: string) => {\r\n        const KEY = '4276bdd223155b7e5bdf58f8ea7014c9'\r\n        try {\r\n          const response = await superagent\r\n            .get(\r\n              // eslint-disable-next-line max-len\r\n              `https://api.openweathermap.org/data/2.5/weather?q=${el}&units=metric&lang=ru&appid=${KEY}`\r\n            )\r\n          const data = JSON.parse(response.text)\r\n          dispatch(addCityAction({ city: data }))\r\n        } catch (e: any) { console.log(e.message) }\r\n      }\r\n      storedValue.forEach((el) => {\r\n        superagentTest(el)\r\n        dispatch(addCityNameAction(el))\r\n      })\r\n    }\r\n  }, [storedValue, stateLocalStorage, dispatch])\r\n  const router = useRoutes()\r\n  return (\r\n    <>\r\n      { router }\r\n    </>\r\n  )\r\n}\r\n\r\n// `https://api.openweathermap.org/data/2.5/weather?q=${el}&units=metric&lang=ru&appid=${KEY}`\r\n","import { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { Alert } from './components/Alert'\r\nimport { DetailForecast } from './pages/DetailForecast'\r\nimport { ShortForecast } from './pages/ShortForecast'\r\n\r\nexport const useRoutes = (): JSX.Element => (\r\n  <>\r\n    <Alert />\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <ShortForecast />\r\n      </Route>\r\n      <Route\r\n        path=\"/detailed/:slug\"\r\n        render={() => <DetailForecast />}\r\n      />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  </>\r\n)\r\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\nimport store from './redux-toolkit'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\nreportWebVitals()\n"],"sourceRoot":""}